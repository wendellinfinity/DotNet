//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DaodaoKinect {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class XmlFiles {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal XmlFiles() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DaodaoKinect.XmlFiles", typeof(XmlFiles).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;OpenNI&gt;
        ///     &lt;Licenses&gt;
        ///          &lt;License vendor=&quot;PrimeSense&quot; key=&quot;0KOIk2JeIBYClPWVnMoRKn5cdY4=&quot;/&gt;
        ///     &lt;/Licenses&gt;
        ///     &lt;Log writeToConsole=&quot;true&quot; writeToFile=&quot;false&quot;&gt;
        ///          &lt;!-- 0 - Verbose, 1 - Info, 2 - Warning, 3 - Error (default) --&gt;
        ///          &lt;LogLevel value=&quot;3&quot;/&gt;
        ///          &lt;Masks&gt;
        ///               &lt;Mask name=&quot;ALL&quot; on=&quot;false&quot;/&gt;
        ///          &lt;/Masks&gt;
        ///          &lt;Dumps&gt;    &lt;/Dumps&gt;
        ///     &lt;/Log&gt;
        ///     &lt;ProductionNodes&gt;
        ///          &lt;Node type=&quot;Depth&quot; name=&quot;Depth1&quot;&gt;
        ///               &lt;Configuration [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string openni {
            get {
                return ResourceManager.GetString("openni", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;OpenNI&gt;
        ///     &lt;Licenses&gt;
        ///          &lt;!-- Add licenses here &lt;License vendor=&quot;vendor&quot; key=&quot;key&quot;/&gt;--&gt;
        ///     &lt;/Licenses&gt;
        ///     &lt;Log writeToConsole=&quot;false&quot; writeToFile=&quot;false&quot;&gt;
        ///          &lt;!-- 0 - Verbose, 1 - Info, 2 - Warning, 3 - Error (default) --&gt;
        ///          &lt;LogLevel value=&quot;3&quot;/&gt;
        ///          &lt;Masks&gt;
        ///               &lt;Mask name=&quot;ALL&quot; on=&quot;true&quot;/&gt;
        ///          &lt;/Masks&gt;
        ///          &lt;Dumps&gt;&lt;/Dumps&gt;
        ///     &lt;/Log&gt;
        ///     &lt;ProductionNodes&gt;
        ///          &lt;Node type=&quot;Image&quot; name=&quot;Image1&quot;&gt;
        ///               &lt;Configuration&gt;
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string openniconfig {
            get {
                return ResourceManager.GetString("openniconfig", resourceCulture);
            }
        }
    }
}
